Original specs:
install cuda + driver
Nvidia CUDA toolkit newest (11.2.0) - arch=sm_75 (voor RTX 2080ti) - install via https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=debnetwork

Driver-CUDA compatibility: docs.nvidia.com/deploy/cuda-compatibility/index.html shows RTX2080 ti not working with CUDA 9.0, works anyways (with small warning every run)

INSTALL STEPS:
check pkg-config and libglvnd development libraries installed
Get NVIDIA driver: https://www.nvidia.com/Download/index.aspx?lang=en-us
/etc/modprobe.d/nvidia-installer-disable-nouveau.conf

CUDA 9.0/9.1 is needed for compatibility with pytorch 0.4.0. 
Download via: developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run

cd to folder of the file
sudo sh <file>

default GCC probably gives error when trying to run
solution: https://askubuntu.com/questions/26498/how-to-choose-the-default-gcc-and-g-version/26502#26502 - CHANGE IT BACK to original default AFTERWARDS
results in these steps:
sudo apt-get install gcc-6 g++-6

(your default gcc might be a different version, check this with "gcc -v" and "g++ -v")
sudo rm /usr/bin/gcc
sudo rm /usr/bin/g++

sudo ln -s /usr/bin/gcc-6 /usr/bin/gcc
sudo ln -s /usr/bin/g++-6 /usr/bin/g++

- `sudo nano ~/.bashrc`
- at the bottom of file, add lines: `export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}`

optional: cuDNN (after login/account creation): https://developer.nvidia.com/rdp/cudnn-archive

Create conda environment:
conda env create --file env.yml
(or one of the other options - env_expanded.yml, explicit_req_conda.txt, env_cuda91.yml - command to install is in comment at top of file)

nvcc shit met sm_70, niet sm_75

AFTER INSTALL change back:
sudo rm /usr/bin/gcc
sudo rm /usr/bin/g++

sudo ln -s /usr/bin/gcc-7 /usr/bin/gcc
sudo ln -s /usr/bin/g++-7 /usr/bin/g++

python demo.py

UNINSTALL
conda:
conda remove -n pytorch-mask-rcnn --all

drivers and cuda:
Uninstall via: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#removing-cuda-tk-and-driver OF https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#handle-uninstallation - hier staan ook prerequisite acties als nodig. Ook post-installation instructions hier(lijken onnodig).
/usr/local/cuda-X.Y/bin/cuda-uninstaller
/usr/local/cuda-X.Y/bin/uninstall_cuda_X.Y.pl

